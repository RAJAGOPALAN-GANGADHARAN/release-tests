language: cpp
compiler: gcc
sudo: required
dist: bionic
git:
  depth: 3

addons:
  apt:
    packages:
      - p7zip-full
      - ninja-build
      - libhunspell-dev
      - libgl1-mesa-dev
      - libgstreamer-plugins-base1.0-0
      - libpulse-mainloop-glib0
      - python3-pip
  homebrew:
    update: true
    packages:
      - p7zip
      - ninja
      - hunspell

env:
  global:
    QT_VERSION=5.13.1
    QTWEBKIT_BRANCH=5.212
    QTWEBKIT_BUILD_NUMBER=1568196124
    QT_INSTALL_DIR=~/Qt
    QT_MODULES="qtbase qtdeclarative qtlocation qtmultimedia qtsensors qtwebchannel qtsvg"
    HOST_N_CORES=2

matrix:
  include:
  - name: "macOS x86_64"
    os: osx
    osx_image: xcode10.1
    env:
      CMAKE_GENERATOR=Ninja
    install:
      - 3rdparty/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} ${QT_MODULES} qtmacextras
      - export QTDIR="${QT_INSTALL_DIR}/${QT_VERSION}/clang_64"
      - export QT_QPA_PLATFORM_PLUGIN_PATH=$QTDIR/plugins
      - export PATH="$QTDIR/bin:$PATH"
      - ./install-qtwebkit MacOS_10_13-Clang-MacOS-MacOS_10_13-X86_64
    before_script:
      - du -hs $QTDIR
      - qmake -query
    script:
      - ./build-pyqt5.sh
      - ./build-otter.sh
      - ./build-phantomjs.sh
  - name: "VS 2017 x86"
    os: windows
    env:
      CMAKE_GENERATOR="Visual Studio 15 2017"
      QT_INSTALL_DIR=C:/Qt
    before_install:
      - powershell.exe -ExecutionPolicy Bypass -NoProfile -NonInteractive -File windows_setup.ps1
    install:
      - choco install jom
      - 3rdparty/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} --toolchain win32_msvc2017 ${QT_MODULES} qtwinextras
      - export QTDIR="${QT_INSTALL_DIR}/${QT_VERSION}/msvc2017"
      - export PATH="$(cygpath -u ${QTDIR})/bin:$PATH"
      - ./install-qtwebkit Windows_10-MSVC2017-Windows-Windows_10-X86
    before_script:
      - du -hs $QTDIR
      - qmake -query
    script:
      - ./build-otter.sh
      - VS_ARCH=x86 ./build-phantomjs-vs.bat
  - name: "VS 2017 x86_64"
    os: windows
    env:
      CMAKE_GENERATOR="Visual Studio 15 2017 Win64"
      QT_INSTALL_DIR=C:/Qt
    before_install:
      - powershell.exe -ExecutionPolicy Bypass -NoProfile -NonInteractive -File windows_setup.ps1
    install:
      - choco install jom
      - 3rdparty/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} --toolchain win64_msvc2017_64 ${QT_MODULES} qtwinextras
      - export QTDIR="${QT_INSTALL_DIR}/${QT_VERSION}/msvc2017_64"
      - export PATH="$(cygpath -u ${QTDIR})/bin:$PATH"
      - ./install-qtwebkit Windows_10-MSVC2017-Windows-Windows_10-X86_64
    before_script:
      - du -hs $QTDIR
      - qmake -query
    script:
      - ./build-otter.sh
      - VS_ARCH=amd64 ./build-phantomjs-vs.bat
  - name: "MinGW 7.3 x86"
    os: windows
    env:
      CMAKE_GENERATOR="MSYS Makefiles"
      CMAKE_ARGS="-DCMAKE_MAKE_PROGRAM=mingw32-make"
      QT_INSTALL_DIR=C:/Qt
      MAKE=mingw32-make
    before_install:
      - powershell.exe -ExecutionPolicy Bypass -NoProfile -NonInteractive -File windows_setup.ps1
    install:
      - 3rdparty/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} --toolchain win32_mingw73 ${QT_MODULES} qtwinextras
      - export QTDIR="${QT_INSTALL_DIR}/${QT_VERSION}/mingw73_32"
      - export PATH="$(cygpath -u ${QTDIR})/bin:$PATH"
      - 3rdparty/install-qt.sh -d ${QT_INSTALL_DIR} --version 7.3.0 win32_mingw730
      - export PATH="$(cygpath -u ${QT_INSTALL_DIR})/Tools/mingw730_32/bin:$PATH"
      - ./install-qtwebkit Windows_7-Mingw73-Windows-Windows_7-X86
    before_script:
      - du -hs $QTDIR
      - qmake -query
      - g++ -v
      - mingw32-make --version
    script:
      - ./build-otter.sh
      - ./build-phantomjs.sh
  - name: "Linux x86_64"
    os: linux
    env:
      CMAKE_GENERATOR=Ninja
    install:
      - 3rdparty/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} ${QT_MODULES} icu
      - export QTDIR="${QT_INSTALL_DIR}/${QT_VERSION}/gcc_64"
      - export QT_QPA_PLATFORM_PLUGIN_PATH=$QTDIR/plugins
      - export PATH="$QTDIR/bin:$PATH"
      - export LD_LIBRARY_PATH=$QTDIR/lib
      - ./install-qtwebkit RHEL_7_6-GCC-Linux-RHEL_7_6-X86_64
    before_script:
      - du -hs $QTDIR
      - qmake -query
    script:
      - ./build-pyqt5.sh
      - ./build-otter.sh
      - ./build-phantomjs.sh
