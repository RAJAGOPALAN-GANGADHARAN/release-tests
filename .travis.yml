language: cpp
compiler: gcc
sudo: required
dist: bionic
git:
  depth: 3

addons:
  apt:
    packages:
      - p7zip-full
      - ninja-build
      - libhunspell-dev
      - libgl1-mesa-dev
      - libgstreamer-plugins-base1.0-0
      - libpulse-mainloop-glib0
  homebrew:
    update: true
    packages:
      - p7zip
      - ninja
      - hunspell

env:
  global:
    QT_VERSION=5.13.0
    QTWEBKIT_BRANCH=5.212
    QTWEBKIT_BUILD_NUMBER=1567427726
    QT_INSTALL_DIR=~/Qt
    QT_MODULES="qtbase qtdeclarative qtlocation qtmultimedia qtsensors qtwebchannel qtsvg"

matrix:
  include:
  - os: osx
    osx_image: xcode10.1
    env:
      CMAKE_GENERATOR=Ninja
    install:
      - 3rdparty/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} ${QT_MODULES} qtmacextras
      - export QTDIR="${QT_INSTALL_DIR}/${QT_VERSION}/clang_64"
      - ./install-qtwebkit MacOS_10_13-Clang-MacOS-MacOS_10_13-X86_64
    before_script:
      - du -hs $QTDIR
      - $QTDIR/bin/qmake -query
  - os: windows
    env:
      CMAKE_GENERATOR="Visual Studio 15 2017"
      QT_INSTALL_DIR=C:/Qt
    before_install:
      - powershell.exe -ExecutionPolicy Bypass -NoProfile -NonInteractive -File windows_setup.ps1
    install:
      - 3rdparty/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} --toolchain win32_msvc2017 ${QT_MODULES} qtwinextras
      - export QTDIR="${QT_INSTALL_DIR}/${QT_VERSION}/msvc2017"
      - ./install-qtwebkit Windows_10-MSVC2017-Windows-Windows_10-X86
    before_script:
      - du -hs $QTDIR
      - $QTDIR/bin/qmake -query
  - os: windows
    env:
      CMAKE_GENERATOR="Visual Studio 15 2017 Win64"
      QT_INSTALL_DIR=C:/Qt
    before_install:
      - powershell.exe -ExecutionPolicy Bypass -NoProfile -NonInteractive -File windows_setup.ps1
    install:
      - 3rdparty/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} --toolchain win64_msvc2017_64 ${QT_MODULES} qtwinextras
      - export QTDIR="${QT_INSTALL_DIR}/${QT_VERSION}/msvc2017_64"
      - ./install-qtwebkit Windows_10-MSVC2017-Windows-Windows_10-X86_64
    before_script:
      - du -hs $QTDIR
      - $QTDIR/bin/qmake -query
  - os: windows
    env:
      CMAKE_GENERATOR="MSYS Makefiles"
      CMAKE_ARGS="-DCMAKE_MAKE_PROGRAM=mingw32-make"
      QT_INSTALL_DIR=C:/Qt
    before_install:
      - powershell.exe -ExecutionPolicy Bypass -NoProfile -NonInteractive -File windows_setup.ps1
    install:
      - 3rdparty/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} --toolchain win32_mingw73 ${QT_MODULES} qtwinextras
      - export QTDIR="${QT_INSTALL_DIR}/${QT_VERSION}/mingw73_32"
      - 3rdparty/install-qt.sh -d ${QT_INSTALL_DIR} --version 7.3.0 win32_mingw730
      - export PATH="$(cygpath -u ${QT_INSTALL_DIR})/Tools/mingw730_32/bin:$PATH"
      - ./install-qtwebkit Windows_7-Mingw73-Windows-Windows_7-X86
    before_script:
      - du -hs $QTDIR
      - $QTDIR/bin/qmake -query
      - g++ -v
      - mingw32-make --version
  - os: linux
    env:
      CMAKE_GENERATOR=Ninja
    install:
      - 3rdparty/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} ${QT_MODULES} icu
      - export QTDIR="${QT_INSTALL_DIR}/${QT_VERSION}/gcc_64"
      - ./install-qtwebkit RHEL_7_6-GCC-Linux-RHEL_7_6-X86_64
    before_script:
      - du -hs $QTDIR
      - $QTDIR/bin/qmake -query

script:
  - git clone --depth 1 https://github.com/annulen/otter-browser.git -b getCreationTime
  - mkdir otter-browser-build
  - cmake -Botter-browser-build -Hotter-browser -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$QTDIR $CMAKE_ARGS -G "$CMAKE_GENERATOR"
  - cmake --build otter-browser-build --config Release
